┌───────────────────────────────────────────────────┐
│                      main()                       │
└───────────────────────────────────────────────────┘
                           │
                           ▼
      ┌─────────────────────────────────────────────────────-─┐
      │ Verificar si argc == 5 (número correcto de argumentos)│
      │ -> argv[1] = archivo de entrada                       │
      │ -> argv[2] = comando 1                                │
      │ -> argv[3] = comando 2                                │
      │ -> argv[4] = archivo de salida                        │
      │ Si argc != 5 -> llamar a handle_error()               │
      └──────────────────────────────────────────────────────-┘
                           │
                           ▼
     ┌───────────────────────────────────────────────────────┐
     │ Crear el pipe para la comunicación entre procesos     │
     │ -> pipe(pipe_end) -> si error, llamar a handle_error()│
     └───────────────────────────────────────────────────────┘
                           │
                  ┌────────┴────────┐
                  ▼                 ▼
        ┌──────────────────┐   ┌──────────────────┐
        │ Proceso hijo     │   │ Proceso padre    │
        └──────────────────┘   └──────────────────┘
                  │                 │
                  ▼                 ▼
    ┌───────────────────────────┐   ┌───────────────────────────────────────────┐
    │ fork()                    │   │ fork()                                    │
    │ -> Si error, llamar a     │   │ -> Si error, llamar a handle_error()      │
    │    handle_error()         │   │ -> Si es el proceso padre, continuar      │
    │-> Si es el hijo (pid == 0)│   │ -> Esperar al proceso hijo (waitpid)      │
    └───────────────────────────┘   └───────────────────────────────────────────┘
                  │                                                    │
                  ▼                                                    │
    ┌─────────────────────────────────────┐                            │  
    |En el hijo: Abrir archivo de entrada │                            │
    │-> fd_in = open(argv[1], O_RDONLY)   │                            │
    │-> Si error, llamar a handle_error() │                            │
    └─────────────────────────────────────┘                            │
                  │                                                    │
                  ▼                                                    │
    ┌───────────────────────────────────────────────---------─┐        │
    │ Redirigir entrada estándar del proceso hijo             │        │
    │ -> dup2(fd_in, STDIN_FILENO)                            │        │
    │ -> dup2(pipe_end[1], STDOUT_FILENO) (escribir)          │        │
    │ Cerrar el extremo de lectura del pipe (pipe_end[0])     │        │
    │ Cerrar fd_in (ya no es necesario después de redirigir)  │        │
    │ Si error, llamar a handle_error()                       │        │
    └───────────────────────────────────────────────---------─┘        │
                  │                                                    │
                  ▼                                                    │
    ┌───────────────────────────────────────────────┐                  │
    │ Ejecutar el primer comando (argv[2])          │                  │
    │ -> execve(cmd_path, cmd_args, envp)           │                  │
    │ (Comando se ejecutará con los parámetros dados│                  │
    │  y el entorno)                                │                  │
    │ Si error, llamar a handle_error()             │                  │
    └───────────────────────────────────────────────┘                  │
                  │                                                    │
                  ▼                                                    │
    ┌───────────────────────────────────────────────┐                  │
    │ Si execve() falla, el proceso hijo terminará  │                  │
    │ en este punto. handle_error() debería manejar │                  │
    │ correctamente la terminación del hijo.        │                  │
    └───────────────────────────────────────────────┘                  │
                                                                       │
--------------------------------------                                 │
                                                                       │
Mientras tanto, en el proceso padre:                                   │
                  │────────────────────────────────────────────────────│
                  ▼
    ┌──────────────────────────────────────────────────------------─┐
    │ En el padre: Abrir archivo de salida (argv[4])                │
    │ -> fd_out = open(argv[4], O_WRONLY | O_CREAT | O_TRUNC, 0644) │
    │ -> Si error, llamar a handle_error()                          │
    └──────────────────────────────────────────────────------------─┘
                  │
                  ▼
    ┌──────────────────────────────────────────────────------─┐
    │ Redirigir la salida estándar del padre                  │
    │ -> dup2(pipe_end[0], STDIN_FILENO) (leer del pipe)      │
    │ -> dup2(fd_out, STDOUT_FILENO) (escribir a archivo)     │
    │ Cerrar el extremo de escritura del pipe (pipe_end[1])   │
    │ Cerrar fd_out (ya no es necesario después de redirigir) │
    │ Si error, llamar a handle_error()                       │
    └──────────────────────────────────────────────────------─┘
                  │
                  ▼
    ┌────────────────────────────────────────────────┐
    │ Ejecutar el segundo comando (argv[3])          │
    │ -> execve(cmd_path, cmd_args, envp)            │
    │ Si error, llamar a handle_error()              │
    └────────────────────────────────────────────────┘
                  │
                  ▼
    ┌───────────────────────────────────────────────┐
    │ Esperar que el hijo termine su ejecución      │
    │ -> waitpid(pid, NULL, 0) (espera a que termine│
    │    el proceso hijo creado con fork())         │
    └───────────────────────────────────────────────┘
                  │
                  ▼
    ┌──────────────────────────────────────────────-─┐
    │ Finalizar el programa después de ejecutar ambos│
    │ comandos y redirigir correctamente las entradas│
    │ y salidas.                                     │
    └──────────────────────────────────────────────-─┘

